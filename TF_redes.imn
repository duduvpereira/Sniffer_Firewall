node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
    }
    canvas c1
    iconcoords {199.0 219.0}
    labelcoords {199.0 251.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n8}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {407.0 219.0}
    labelcoords {407.0 243.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
    interface-peer {e3 n5}
    interface-peer {e4 n6}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.20/24
	 ipv6 address 2001:0::20/64
	!
    }
    canvas c1
    iconcoords {179.0 397.0}
    labelcoords {179.0 429.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.10
	ip route add default via 2001::1
	
	}
    }
    services {DefaultRoute}
}

node n4 {
    type router
    model PC
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.21/24
	 ipv6 address 2001:0::21/64
	!
    }
    canvas c1
    iconcoords {365.0 396.0}
    labelcoords {365.0 428.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.10
	ip route add default via 2001::1
	
	}
    }
    services {DefaultRoute}
}

node n5 {
    type router
    model PC
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.22/24
	 ipv6 address 2001:0::22/64
	!
    }
    canvas c1
    iconcoords {541.0 393.0}
    labelcoords {541.0 425.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.1
	ip route add default via 2001::10
	
	}
    }
    services {DefaultRoute}
}

node n6 {
    type router
    model PC
    network-config {
	hostname Gateway
	!
	interface eth0
	 ipv6 address 2001:0::23/64
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {698.0 219.0}
    labelcoords {698.0 251.0}
    interface-peer {eth0 n2}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.1.20/24
	 ipv6 address 2001:1::20/64
	!
    }
    canvas c1
    iconcoords {51.0 143.0}
    labelcoords {51.0 175.0}
    interface-peer {eth0 n8}
}

node n8 {
    type lanswitch
    network-config {
	hostname n8
	!
    }
    canvas c1
    iconcoords {200.0 143.0}
    labelcoords {200.0 167.0}
    interface-peer {e0 n1}
    interface-peer {e1 n7}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n2 n4}
    bandwidth 0
}

link l4 {
    nodes {n2 n5}
    bandwidth 0
}

link l5 {
    nodes {n2 n6}
    bandwidth 0
}

link l6 {
    nodes {n1 n8}
    bandwidth 0
}

link l7 {
    nodes {n8 n7}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

